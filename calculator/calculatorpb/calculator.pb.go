// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb // import "calculator/calculatorpb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{0}
}
func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (dst *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(dst, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *SumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{1}
}
func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (dst *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(dst, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MultipleRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultipleRequest) Reset()         { *m = MultipleRequest{} }
func (m *MultipleRequest) String() string { return proto.CompactTextString(m) }
func (*MultipleRequest) ProtoMessage()    {}
func (*MultipleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{2}
}
func (m *MultipleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultipleRequest.Unmarshal(m, b)
}
func (m *MultipleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultipleRequest.Marshal(b, m, deterministic)
}
func (dst *MultipleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultipleRequest.Merge(dst, src)
}
func (m *MultipleRequest) XXX_Size() int {
	return xxx_messageInfo_MultipleRequest.Size(m)
}
func (m *MultipleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultipleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultipleRequest proto.InternalMessageInfo

func (m *MultipleRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *MultipleRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type MultipleResponse struct {
	MultipleResult       int32    `protobuf:"varint,1,opt,name=multiple_result,json=multipleResult,proto3" json:"multiple_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultipleResponse) Reset()         { *m = MultipleResponse{} }
func (m *MultipleResponse) String() string { return proto.CompactTextString(m) }
func (*MultipleResponse) ProtoMessage()    {}
func (*MultipleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{3}
}
func (m *MultipleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultipleResponse.Unmarshal(m, b)
}
func (m *MultipleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultipleResponse.Marshal(b, m, deterministic)
}
func (dst *MultipleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultipleResponse.Merge(dst, src)
}
func (m *MultipleResponse) XXX_Size() int {
	return xxx_messageInfo_MultipleResponse.Size(m)
}
func (m *MultipleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultipleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultipleResponse proto.InternalMessageInfo

func (m *MultipleResponse) GetMultipleResult() int32 {
	if m != nil {
		return m.MultipleResult
	}
	return 0
}

type ShapeManyTimesRequest struct {
	Radius               int32    `protobuf:"varint,1,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShapeManyTimesRequest) Reset()         { *m = ShapeManyTimesRequest{} }
func (m *ShapeManyTimesRequest) String() string { return proto.CompactTextString(m) }
func (*ShapeManyTimesRequest) ProtoMessage()    {}
func (*ShapeManyTimesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{4}
}
func (m *ShapeManyTimesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShapeManyTimesRequest.Unmarshal(m, b)
}
func (m *ShapeManyTimesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShapeManyTimesRequest.Marshal(b, m, deterministic)
}
func (dst *ShapeManyTimesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShapeManyTimesRequest.Merge(dst, src)
}
func (m *ShapeManyTimesRequest) XXX_Size() int {
	return xxx_messageInfo_ShapeManyTimesRequest.Size(m)
}
func (m *ShapeManyTimesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShapeManyTimesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShapeManyTimesRequest proto.InternalMessageInfo

func (m *ShapeManyTimesRequest) GetRadius() int32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type ShapeManyTimesResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShapeManyTimesResponse) Reset()         { *m = ShapeManyTimesResponse{} }
func (m *ShapeManyTimesResponse) String() string { return proto.CompactTextString(m) }
func (*ShapeManyTimesResponse) ProtoMessage()    {}
func (*ShapeManyTimesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{5}
}
func (m *ShapeManyTimesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShapeManyTimesResponse.Unmarshal(m, b)
}
func (m *ShapeManyTimesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShapeManyTimesResponse.Marshal(b, m, deterministic)
}
func (dst *ShapeManyTimesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShapeManyTimesResponse.Merge(dst, src)
}
func (m *ShapeManyTimesResponse) XXX_Size() int {
	return xxx_messageInfo_ShapeManyTimesResponse.Size(m)
}
func (m *ShapeManyTimesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShapeManyTimesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShapeManyTimesResponse proto.InternalMessageInfo

func (m *ShapeManyTimesResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type ComputedAvrageRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputedAvrageRequest) Reset()         { *m = ComputedAvrageRequest{} }
func (m *ComputedAvrageRequest) String() string { return proto.CompactTextString(m) }
func (*ComputedAvrageRequest) ProtoMessage()    {}
func (*ComputedAvrageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{6}
}
func (m *ComputedAvrageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputedAvrageRequest.Unmarshal(m, b)
}
func (m *ComputedAvrageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputedAvrageRequest.Marshal(b, m, deterministic)
}
func (dst *ComputedAvrageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputedAvrageRequest.Merge(dst, src)
}
func (m *ComputedAvrageRequest) XXX_Size() int {
	return xxx_messageInfo_ComputedAvrageRequest.Size(m)
}
func (m *ComputedAvrageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputedAvrageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputedAvrageRequest proto.InternalMessageInfo

func (m *ComputedAvrageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ComputedAvrageResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputedAvrageResponse) Reset()         { *m = ComputedAvrageResponse{} }
func (m *ComputedAvrageResponse) String() string { return proto.CompactTextString(m) }
func (*ComputedAvrageResponse) ProtoMessage()    {}
func (*ComputedAvrageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{7}
}
func (m *ComputedAvrageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputedAvrageResponse.Unmarshal(m, b)
}
func (m *ComputedAvrageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputedAvrageResponse.Marshal(b, m, deterministic)
}
func (dst *ComputedAvrageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputedAvrageResponse.Merge(dst, src)
}
func (m *ComputedAvrageResponse) XXX_Size() int {
	return xxx_messageInfo_ComputedAvrageResponse.Size(m)
}
func (m *ComputedAvrageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputedAvrageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputedAvrageResponse proto.InternalMessageInfo

func (m *ComputedAvrageResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type FindMaxNumEveryoneRequest struct {
	Number               []int32  `protobuf:"varint,1,rep,packed,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxNumEveryoneRequest) Reset()         { *m = FindMaxNumEveryoneRequest{} }
func (m *FindMaxNumEveryoneRequest) String() string { return proto.CompactTextString(m) }
func (*FindMaxNumEveryoneRequest) ProtoMessage()    {}
func (*FindMaxNumEveryoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{8}
}
func (m *FindMaxNumEveryoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxNumEveryoneRequest.Unmarshal(m, b)
}
func (m *FindMaxNumEveryoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxNumEveryoneRequest.Marshal(b, m, deterministic)
}
func (dst *FindMaxNumEveryoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxNumEveryoneRequest.Merge(dst, src)
}
func (m *FindMaxNumEveryoneRequest) XXX_Size() int {
	return xxx_messageInfo_FindMaxNumEveryoneRequest.Size(m)
}
func (m *FindMaxNumEveryoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxNumEveryoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxNumEveryoneRequest proto.InternalMessageInfo

func (m *FindMaxNumEveryoneRequest) GetNumber() []int32 {
	if m != nil {
		return m.Number
	}
	return nil
}

type FindMaxNumEveryoneResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxNumEveryoneResponse) Reset()         { *m = FindMaxNumEveryoneResponse{} }
func (m *FindMaxNumEveryoneResponse) String() string { return proto.CompactTextString(m) }
func (*FindMaxNumEveryoneResponse) ProtoMessage()    {}
func (*FindMaxNumEveryoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_2750135d469f7923, []int{9}
}
func (m *FindMaxNumEveryoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxNumEveryoneResponse.Unmarshal(m, b)
}
func (m *FindMaxNumEveryoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxNumEveryoneResponse.Marshal(b, m, deterministic)
}
func (dst *FindMaxNumEveryoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxNumEveryoneResponse.Merge(dst, src)
}
func (m *FindMaxNumEveryoneResponse) XXX_Size() int {
	return xxx_messageInfo_FindMaxNumEveryoneResponse.Size(m)
}
func (m *FindMaxNumEveryoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxNumEveryoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxNumEveryoneResponse proto.InternalMessageInfo

func (m *FindMaxNumEveryoneResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*MultipleRequest)(nil), "calculator.MultipleRequest")
	proto.RegisterType((*MultipleResponse)(nil), "calculator.MultipleResponse")
	proto.RegisterType((*ShapeManyTimesRequest)(nil), "calculator.ShapeManyTimesRequest")
	proto.RegisterType((*ShapeManyTimesResponse)(nil), "calculator.ShapeManyTimesResponse")
	proto.RegisterType((*ComputedAvrageRequest)(nil), "calculator.ComputedAvrageRequest")
	proto.RegisterType((*ComputedAvrageResponse)(nil), "calculator.ComputedAvrageResponse")
	proto.RegisterType((*FindMaxNumEveryoneRequest)(nil), "calculator.FindMaxNumEveryoneRequest")
	proto.RegisterType((*FindMaxNumEveryoneResponse)(nil), "calculator.FindMaxNumEveryoneResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Multiple(ctx context.Context, in *MultipleRequest, opts ...grpc.CallOption) (*MultipleResponse, error)
	ShapeManyTimes(ctx context.Context, in *ShapeManyTimesRequest, opts ...grpc.CallOption) (CalculatorService_ShapeManyTimesClient, error)
	ComputedAvrage(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_ComputedAvrageClient, error)
	FindMaxNumEveryone(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_FindMaxNumEveryoneClient, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) Multiple(ctx context.Context, in *MultipleRequest, opts ...grpc.CallOption) (*MultipleResponse, error) {
	out := new(MultipleResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Multiple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) ShapeManyTimes(ctx context.Context, in *ShapeManyTimesRequest, opts ...grpc.CallOption) (CalculatorService_ShapeManyTimesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/ShapeManyTimes", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceShapeManyTimesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_ShapeManyTimesClient interface {
	Recv() (*ShapeManyTimesResponse, error)
	grpc.ClientStream
}

type calculatorServiceShapeManyTimesClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceShapeManyTimesClient) Recv() (*ShapeManyTimesResponse, error) {
	m := new(ShapeManyTimesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) ComputedAvrage(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_ComputedAvrageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/ComputedAvrage", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceComputedAvrageClient{stream}
	return x, nil
}

type CalculatorService_ComputedAvrageClient interface {
	Send(*ComputedAvrageRequest) error
	CloseAndRecv() (*ComputedAvrageResponse, error)
	grpc.ClientStream
}

type calculatorServiceComputedAvrageClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceComputedAvrageClient) Send(m *ComputedAvrageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceComputedAvrageClient) CloseAndRecv() (*ComputedAvrageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputedAvrageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) FindMaxNumEveryone(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_FindMaxNumEveryoneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[2], "/calculator.CalculatorService/FindMaxNumEveryone", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceFindMaxNumEveryoneClient{stream}
	return x, nil
}

type CalculatorService_FindMaxNumEveryoneClient interface {
	Send(*FindMaxNumEveryoneRequest) error
	Recv() (*FindMaxNumEveryoneResponse, error)
	grpc.ClientStream
}

type calculatorServiceFindMaxNumEveryoneClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceFindMaxNumEveryoneClient) Send(m *FindMaxNumEveryoneRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceFindMaxNumEveryoneClient) Recv() (*FindMaxNumEveryoneResponse, error) {
	m := new(FindMaxNumEveryoneResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	Multiple(context.Context, *MultipleRequest) (*MultipleResponse, error)
	ShapeManyTimes(*ShapeManyTimesRequest, CalculatorService_ShapeManyTimesServer) error
	ComputedAvrage(CalculatorService_ComputedAvrageServer) error
	FindMaxNumEveryone(CalculatorService_FindMaxNumEveryoneServer) error
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_Multiple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultipleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Multiple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Multiple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Multiple(ctx, req.(*MultipleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_ShapeManyTimes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ShapeManyTimesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).ShapeManyTimes(m, &calculatorServiceShapeManyTimesServer{stream})
}

type CalculatorService_ShapeManyTimesServer interface {
	Send(*ShapeManyTimesResponse) error
	grpc.ServerStream
}

type calculatorServiceShapeManyTimesServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceShapeManyTimesServer) Send(m *ShapeManyTimesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_ComputedAvrage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).ComputedAvrage(&calculatorServiceComputedAvrageServer{stream})
}

type CalculatorService_ComputedAvrageServer interface {
	SendAndClose(*ComputedAvrageResponse) error
	Recv() (*ComputedAvrageRequest, error)
	grpc.ServerStream
}

type calculatorServiceComputedAvrageServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceComputedAvrageServer) SendAndClose(m *ComputedAvrageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceComputedAvrageServer) Recv() (*ComputedAvrageRequest, error) {
	m := new(ComputedAvrageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_FindMaxNumEveryone_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).FindMaxNumEveryone(&calculatorServiceFindMaxNumEveryoneServer{stream})
}

type CalculatorService_FindMaxNumEveryoneServer interface {
	Send(*FindMaxNumEveryoneResponse) error
	Recv() (*FindMaxNumEveryoneRequest, error)
	grpc.ServerStream
}

type calculatorServiceFindMaxNumEveryoneServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceFindMaxNumEveryoneServer) Send(m *FindMaxNumEveryoneResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceFindMaxNumEveryoneServer) Recv() (*FindMaxNumEveryoneRequest, error) {
	m := new(FindMaxNumEveryoneRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
		{
			MethodName: "Multiple",
			Handler:    _CalculatorService_Multiple_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ShapeManyTimes",
			Handler:       _CalculatorService_ShapeManyTimes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ComputedAvrage",
			Handler:       _CalculatorService_ComputedAvrage_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "FindMaxNumEveryone",
			Handler:       _CalculatorService_FindMaxNumEveryone_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_calculator_2750135d469f7923)
}

var fileDescriptor_calculator_2750135d469f7923 = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x4d, 0x25, 0x12, 0x33, 0x20, 0xe8, 0x26, 0x80, 0x54, 0x0f, 0x52, 0x83, 0x72, 0x02, 0x22,
	0xc6, 0x8b, 0x27, 0x25, 0x78, 0x83, 0x03, 0xe5, 0x82, 0x17, 0x52, 0xda, 0x11, 0x9b, 0x74, 0xdb,
	0xba, 0xdb, 0x25, 0xf2, 0x59, 0xfe, 0xa1, 0x69, 0x69, 0x69, 0x0b, 0x05, 0x2e, 0xde, 0x3a, 0xaf,
	0x6f, 0xde, 0x9b, 0xc9, 0x9b, 0x2c, 0xb4, 0x74, 0xcd, 0xd2, 0x85, 0xa5, 0x79, 0x0e, 0xeb, 0xc4,
	0x9f, 0xee, 0x3c, 0x51, 0xb4, 0x5d, 0xe6, 0x78, 0x0e, 0x81, 0x18, 0x51, 0x26, 0x00, 0xaa, 0xa0,
	0x63, 0xfc, 0x16, 0xc8, 0x3d, 0xd2, 0x80, 0xe2, 0xa7, 0xc9, 0xb8, 0x37, 0xb3, 0x05, 0x9d, 0x23,
	0xbb, 0x92, 0x6e, 0xa5, 0xd6, 0xe9, 0xb8, 0x10, 0x60, 0xa3, 0x00, 0x22, 0x77, 0x70, 0xce, 0x51,
	0x77, 0x6c, 0x23, 0xe2, 0x9c, 0x04, 0x9c, 0xe2, 0x1a, 0x5c, 0x93, 0x94, 0x26, 0x14, 0x02, 0x55,
	0xee, 0x3a, 0x36, 0x47, 0x52, 0x85, 0x3c, 0x43, 0x2e, 0x2c, 0x2f, 0x14, 0x0c, 0x2b, 0x65, 0x0a,
	0xe5, 0xa1, 0xb0, 0x3c, 0xd3, 0xb5, 0xf0, 0xbf, 0x27, 0x78, 0x81, 0x8b, 0x58, 0x3a, 0x1c, 0xe3,
	0x01, 0xca, 0x34, 0xc4, 0x66, 0xa9, 0x79, 0x4a, 0x34, 0xa6, 0xfa, 0x73, 0x75, 0xa0, 0xa2, 0x7e,
	0x69, 0x2e, 0x0e, 0x35, 0x7b, 0x35, 0x31, 0x29, 0xf2, 0x68, 0x3a, 0x7f, 0x11, 0xcd, 0x30, 0x05,
	0xdf, 0x2c, 0x12, 0x54, 0x4a, 0x17, 0xaa, 0xdb, 0x0d, 0x47, 0x56, 0xef, 0x40, 0xa5, 0xef, 0x50,
	0x57, 0x78, 0x68, 0xbc, 0x2e, 0x99, 0xb6, 0xc0, 0x84, 0x45, 0x6a, 0xf5, 0xb0, 0xf2, 0x2d, 0xb6,
	0x1b, 0x32, 0x2d, 0xa4, 0x8d, 0x45, 0x0f, 0xea, 0xef, 0xa6, 0x6d, 0x0c, 0xb5, 0x9f, 0x91, 0xa0,
	0x83, 0x25, 0xb2, 0x95, 0x63, 0x67, 0xda, 0xe4, 0x12, 0x36, 0x4f, 0x20, 0x67, 0x35, 0x1d, 0xb6,
	0x7a, 0xfc, 0xcd, 0xc1, 0x65, 0x7f, 0x73, 0x54, 0x2a, 0xb2, 0xa5, 0xa9, 0x23, 0x79, 0x86, 0x9c,
	0x2a, 0x28, 0xa9, 0xb6, 0x13, 0x17, 0x18, 0x1f, 0x9b, 0x5c, 0xdb, 0xc1, 0x43, 0x97, 0x01, 0x9c,
	0x45, 0xd9, 0x91, 0xeb, 0x24, 0x69, 0xeb, 0x58, 0xe4, 0x9b, 0xec, 0x9f, 0xa1, 0xcc, 0x14, 0x4a,
	0xe9, 0x50, 0x48, 0x23, 0xe5, 0x98, 0x95, 0xb0, 0xac, 0x1c, 0xa2, 0xac, 0x85, 0xbb, 0x92, 0x2f,
	0x9d, 0x0e, 0x23, 0x2d, 0x9d, 0x99, 0x6c, 0x5a, 0x3a, 0x3b, 0xcb, 0x96, 0x44, 0x16, 0x40, 0x76,
	0x03, 0x20, 0xcd, 0x64, 0xef, 0xde, 0x54, 0xe5, 0xfb, 0x63, 0xb4, 0xc8, 0xa6, 0x2b, 0xbd, 0xd5,
	0x3f, 0x6a, 0x7b, 0x5e, 0x8c, 0x79, 0x3e, 0x78, 0x27, 0x7a, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x8c, 0x37, 0xe0, 0xea, 0x53, 0x04, 0x00, 0x00,
}
